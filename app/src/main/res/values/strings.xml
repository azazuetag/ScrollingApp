<resources>
    <string name="app_name">Scrolling App</string>
    <string name="article_title">Â¿Quieres aprender TextView?</string>
    <string name="article_subtitle">Actualizado el 11/12/2017</string>
    <string name="article_text">The <b>TextView</b> class is a subclass of the View class that displays text on the screen. You can control how the text appears with TextView attributes in the XML layout file. This practical shows how to work with multiple TextView elements, including one in which the user can scroll its contents vertically.
If you have more information than fits on the device display, you can create a scrolling view so that the user can scroll vertically by swiping up or down, or horizontally by swiping right or left. www.Celaya.com
You would typically use a scrolling view for news stories, articles, or any lengthy text that doesnt completely fit on the device display. You can also use a scrolling view to enable users to enter multiple lines of text, or to combine UI elements (such as a text field and a button) within a scrolling view.
\n\nThe ScrollView class provides the layout for the scrolling view. ScrollView is a subclass of FrameLayout, and developers should place only one view as a child within it, where the child view contains the entire contents to scroll. This child view may itself be a view group (such as a layout manager like LinearLayout) with a complex hierarchy of objects. Note that complex layouts may suffer performance issues with child views such as images. A good choice for a view within a ScrollView is a LinearLayout that is arranged in a vertical orientation, presenting top-level items that the user can scroll through.
With a <b><i>ScrollView</i></b>, all of the views are in memory and in the view hierarchy even if they aren't displayed on screen. This makes ScrollView ideal for scrolling pages of free-form text smoothly, because the text is already in memory. However, ScrollView can use up a lot of memory, which can affect the performance of the rest of your app. To display long lists of items that users can add to, delete from, or edit, consider using a RecyclerView, which is described in a separate practical.</string>

</resources>
